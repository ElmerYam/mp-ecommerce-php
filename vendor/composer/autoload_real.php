<?php

// autoload_real.php @generated by Composer

<<<<<<< HEAD
class ComposerAutoloaderInit77ab3ff94d9260568fd3d0be0239dcce
=======
class ComposerAutoloaderInitb7367931de5464481ebdf7bb825a7978
>>>>>>> d73964d4e2c201779e7bf423aa78f550169b1f5f
{
    private static $loader;

    public static function loadClassLoader($class)
    {
        if ('Composer\Autoload\ClassLoader' === $class) {
            require __DIR__ . '/ClassLoader.php';
        }
    }

    /**
     * @return \Composer\Autoload\ClassLoader
     */
    public static function getLoader()
    {
        if (null !== self::$loader) {
            return self::$loader;
        }

<<<<<<< HEAD
        spl_autoload_register(array('ComposerAutoloaderInit77ab3ff94d9260568fd3d0be0239dcce', 'loadClassLoader'), true, true);
        self::$loader = $loader = new \Composer\Autoload\ClassLoader();
        spl_autoload_unregister(array('ComposerAutoloaderInit77ab3ff94d9260568fd3d0be0239dcce', 'loadClassLoader'));
=======
        spl_autoload_register(array('ComposerAutoloaderInitb7367931de5464481ebdf7bb825a7978', 'loadClassLoader'), true, true);
        self::$loader = $loader = new \Composer\Autoload\ClassLoader();
        spl_autoload_unregister(array('ComposerAutoloaderInitb7367931de5464481ebdf7bb825a7978', 'loadClassLoader'));
>>>>>>> d73964d4e2c201779e7bf423aa78f550169b1f5f

        $useStaticLoader = PHP_VERSION_ID >= 50600 && !defined('HHVM_VERSION') && (!function_exists('zend_loader_file_encoded') || !zend_loader_file_encoded());
        if ($useStaticLoader) {
            require_once __DIR__ . '/autoload_static.php';

<<<<<<< HEAD
            call_user_func(\Composer\Autoload\ComposerStaticInit77ab3ff94d9260568fd3d0be0239dcce::getInitializer($loader));
=======
            call_user_func(\Composer\Autoload\ComposerStaticInitb7367931de5464481ebdf7bb825a7978::getInitializer($loader));
>>>>>>> d73964d4e2c201779e7bf423aa78f550169b1f5f
        } else {
            $map = require __DIR__ . '/autoload_namespaces.php';
            foreach ($map as $namespace => $path) {
                $loader->set($namespace, $path);
            }

            $map = require __DIR__ . '/autoload_psr4.php';
            foreach ($map as $namespace => $path) {
                $loader->setPsr4($namespace, $path);
            }

            $classMap = require __DIR__ . '/autoload_classmap.php';
            if ($classMap) {
                $loader->addClassMap($classMap);
            }
        }

        $loader->register(true);

        return $loader;
    }
}
